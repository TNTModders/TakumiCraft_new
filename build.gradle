plugins {
    id 'idea'
    id 'maven-publish'
    id 'net.minecraftforge.gradle' version '[6.0,6.2)'
    id 'io.github.serenibyss.fractureiser-scanner' version '1.0.1'
}


version = '1.20.2-3.0.0.0-beta.0'
group = 'com.tntmodders.takumicraft'
archivesBaseName = 'takumicraft'

java.toolchain.languageVersion = JavaLanguageVersion.of(17)

//only change this on the version-up
dependencies {
    minecraft 'net.minecraftforge:forge:1.20.2-48.0.37'
}

println "Java: ${System.getProperty 'java.version'}, JVM: ${System.getProperty 'java.vm.version'} (${System.getProperty 'java.vendor'}), Arch: ${System.getProperty 'os.arch'}"
minecraft {
    mappings channel: 'official', version: '1.20.2'

    accessTransformer = file('src/main/resources/META-INF/accesstransformer.cfg')

    runs {
        client {
            workingDirectory project.file('run')
            jvmArgs '-XX:+AllowRedefinitionToAddDeleteMethods'
            property 'forge.logging.markers', 'REGISTRIES'
            property 'forge.logging.console.level', 'debug'
            property 'forge.enabledGameTestNamespaces', 'takumicraft'
            mods {
                takumicraft {
                    source sourceSets.main
                }
            }
            args '--username', 'tomkate','--uuid', '00000000-0000-0000-0000-00000000000c', '--width', '1920', '--height', '1000'
        }

        server {
            workingDirectory project.file('run')
            jvmArgs '-XX:+AllowRedefinitionToAddDeleteMethods'
            property 'forge.logging.markers', 'REGISTRIES'
            property 'forge.logging.console.level', 'debug'
            property 'forge.enabledGameTestNamespaces', 'takumicraft'
            mods {
                takumicraft {
                    source sourceSets.main
                }
            }
            args '--nogui'
        }

        data {
            workingDirectory project.file('run')
            jvmArgs '-XX:+AllowRedefinitionToAddDeleteMethods'
            property 'forge.logging.markers', 'REGISTRIES'
            property 'forge.logging.console.level', 'debug'
            property 'forge.enabledGameTestNamespaces', 'takumicraft'
            // Specify the modid for data generation, where to output the resulting resource, and where to look for existing resources.
            args '--mod', 'takumicraft', '--all', '--output', file('src/generated/resources/'), '--existing', file('src/main/resources/')
            mods {
                takumicraft {
                    source sourceSets.main
                }
            }
        }
    }
}
// Include resources generated by data generators.
sourceSets.main.resources { srcDir 'src/generated/resources' }

repositories {
}

jar {
    manifest {
        attributes([
                "Specification-Title"     : "takumicraft",
                "Specification-Vendor"    : "TNT Modders",
                "Specification-Version"   : "1", // We are version 1 of ourselves
                "Implementation-Title"    : project.name,
                "Implementation-Version"  : project.jar.archiveVersion,
                "Implementation-Vendor"   : "Tom Kate",
                "Implementation-Timestamp": new Date().format("yyyy-MM-dd'T'HH:mm:ssZ")
        ])
    }
}

jar.finalizedBy('reobfJar')

publishing {
    publications {
        mavenJava(MavenPublication) {
            artifact jar
        }
    }
    repositories {
        maven {
            url "file://${project.projectDir}/mcmodsrepo"
        }
    }
}

tasks.withType(JavaCompile).configureEach {
    options.encoding = 'UTF-8' // Use the UTF-8 charset for Java compilation
    options.compilerArgs << '-Xlint:-deprecation'
}
